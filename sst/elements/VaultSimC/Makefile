# Makefile.in generated by automake 1.11.1 from Makefile.am.
# sst/elements/VaultSimC/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Makefile -*-
#
#


pkgdatadir = $(datadir)/sst
pkgincludedir = $(includedir)/sst
pkglibdir = $(libdir)/sst
pkglibexecdir = $(libexecdir)/sst
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = sst/elements/VaultSimC
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/argz.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_common.m4 \
	$(top_srcdir)/config/ax_boost_mpi.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_create_stdint_h.m4 \
	$(top_srcdir)/config/ax_cxx_compile_inline_check.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_04.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/sst_check_boost_filesystem.m4 \
	$(top_srcdir)/config/sst_check_boost_mpi_std_string_broken.m4 \
	$(top_srcdir)/config/sst_check_boost_polymorphic_type.m4 \
	$(top_srcdir)/config/sst_check_boost_program_options.m4 \
	$(top_srcdir)/config/sst_check_dramsim.m4 \
	$(top_srcdir)/config/sst_check_dumpi.m4 \
	$(top_srcdir)/config/sst_check_hotspot.m4 \
	$(top_srcdir)/config/sst_check_intsim.m4 \
	$(top_srcdir)/config/sst_check_librt.m4 \
	$(top_srcdir)/config/sst_check_mcpat.m4 \
	$(top_srcdir)/config/sst_check_orion.m4 \
	$(top_srcdir)/config/sst_check_otf.m4 \
	$(top_srcdir)/config/sst_check_parmetis.m4 \
	$(top_srcdir)/config/sst_check_pintool.m4 \
	$(top_srcdir)/config/sst_check_sstmacro.m4 \
	$(top_srcdir)/config/sst_check_zoltan.m4 \
	$(top_srcdir)/config/sst_configure_elements.m4 \
	$(top_srcdir)/config/sst_enable_debug_output.m4 \
	$(top_srcdir)/config/sst_hash_sets.m4 \
	$(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/config/sst_m4_config_include.m4 \
	$(top_srcdir)/sst/elements/PhoenixSim/configure.m4 \
	$(top_srcdir)/sst/elements/ariel/configure.m4 \
	$(top_srcdir)/sst/elements/cpu_power/configure.m4 \
	$(top_srcdir)/sst/elements/m5C/configure.m4 \
	$(top_srcdir)/sst/elements/macro_component/configure.m4 \
	$(top_srcdir)/sst/elements/palacios/configure.m4 \
	$(top_srcdir)/sst/elements/prospero/configure.m4 \
	$(top_srcdir)/sst/elements/scheduler/configure.m4 \
	$(top_srcdir)/sst/elements/sstdisksim/configure.m4 \
	$(top_srcdir)/sst/elements/zesto/configure.m4 \
	$(top_srcdir)/sst/elements/zodiac/configure.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/sst/sst_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(compdir)"
LTLIBRARIES = $(comp_LTLIBRARIES)
libVaultSimC_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libVaultSimC_la_OBJECTS = libVaultSimC_la-libVaultSimGen.lo \
	libVaultSimC_la-logicLayer.lo libVaultSimC_la-cpu.lo \
	libVaultSimC_la-app.lo libVaultSimC_la-VaultSimC.lo \
	libphx/libVaultSimC_la-BankState.lo \
	libphx/libVaultSimC_la-BusPacket.lo \
	libphx/libVaultSimC_la-Partition.lo \
	libphx/libVaultSimC_la-Transaction.lo \
	libphx/libVaultSimC_la-Vault.lo \
	libphx/libVaultSimC_la-VaultController.lo
libVaultSimC_la_OBJECTS = $(am_libVaultSimC_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libVaultSimC_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libVaultSimC_la_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/sst
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libVaultSimC_la_SOURCES)
DIST_SOURCES = $(libVaultSimC_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -pthread -I/home/projects/boost/1.50.0/gnu-4.4.6/openmpi-1.6.4/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem -lboost_system
BOOST_LDFLAGS = -L/home/projects/boost/1.50.0/gnu-4.4.6/openmpi-1.6.4/lib
BOOST_LIBDIR = /home/projects/boost/1.50.0/gnu-4.4.6/openmpi-1.6.4/lib
BOOST_MPI_LIB = -lboost_mpi
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SERIALIZATION_LIB = -lboost_serialization
BOOST_THREAD_LIB = -lboost_thread
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wno-long-long -Wmissing-prototypes -Wstrict-prototypes -Wcomment -pedantic
CLEANFILES = *~
CPP = gcc -std=gnu99 -E
CPPFLAGS = -I$(top_builddir) -I$(top_srcdir) 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -finline-functions -Wall -Wno-long-long
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  --with-boost=/home/projects/boost/1.50.0/gnu-4.4.6/openmpi-1.6.4 --with-zoltan=no
DOXYGEN = doxygen
DRAMSIM_CPPFLAGS = -I/home/projects/dramsim/2.2.2/
DRAMSIM_LDFLAGS = -L/home/projects/dramsim/2.2.2/
DRAMSIM_LIB = -ldramsim
DSYMUTIL = 
DUMPBIN = 
DUMPI_CPPFLAGS = 
DUMPI_LDFLAGS = 
DUMPI_LIB = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HOTSPOT_CPPFLAGS = 
HOTSPOT_LDFLAGS = 
HOTSPOT_LIB = 
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTSIM_CPPFLAGS = 
INTSIM_LDFLAGS = 
INTSIM_LIB = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBLTDL = -lltdl
LIBOBJS = 
LIBS = -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = sst/sst_config.h
LT_DLLOADERS =  dlopen.la
LT_DLPREOPEN = -dlpreopen dlopen.la 
M5_CPPFLAGS = -I -DTHE_ISA=_ISA -DTRACING_ON=1 -DLIBTYPE=OPT  
M5_LDFLAGS = -L
M5_LIB = 
MAKEINFO = ${SHELL} /home/afrodri/buildSST/trunk/config/missing --run makeinfo
MCPAT_CPPFLAGS = 
MCPAT_LDFLAGS = 
MCPAT_LIB = 
MKDIR_P = /bin/mkdir -p
MPICC = mpicc
MPICPP = mpicc -E
MPICXX = mpicxx
MPICXXCPP = mpicxx -E
MPILIBS =  
MPI_CPPFLAGS =  -I/home/projects/openmpi/1.6.4/gnu-4.4.6/include
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OMNETPP_LIB = 
ORION_CPPFLAGS = 
ORION_LDFLAGS = 
ORION_LIB = 
OTF_CONFIG_TOOL = 
OTF_CPPFLAGS = 
OTF_LDFLAGS = 
OTF_PATH = 
OTOOL = 
OTOOL64 = 
PACKAGE = sst
PACKAGE_BUGREPORT = afrodri@sandia.gov
PACKAGE_NAME = SST
PACKAGE_STRING = SST 3.0
PACKAGE_TARNAME = sst
PACKAGE_VERSION = 3.0
PALACIOS_CPPFLAGS = 
PALACIOS_LDFLAGS = 
PALACIOS_LIBS = 
PARMETIS_CPPFLAGS = 
PARMETIS_LDFLAGS = 
PARMETIS_LIB = 
PATH_SEPARATOR = :
PHOENIXSIM_CPPFLAGS = 
PHOENIXSIM_LDFLAGS = 
PHXSIM_CPPFLAGS = 
PHXSIM_LDFLAGS = 
PHXSIM_LIB = 
PINTOOL_CPPFLAGS = 
PINTOOL_DIR = 
PINTOOL_LDFLAGS = 
PINTOOL_PATH = 
PINTOOL_RUNTIME = 
PYTHON_CONFIG_EXE = /usr/bin/python-config
PYTHON_CPPFLAGS = -I/usr/include/python2.6 -I/usr/include/python2.6
QSIM_CPPFLAGS = 
QSIM_LDFLAGS = 
QSIM_LIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSTDISKSIM_CPPFLAGS = 
SSTDISKSIM_LDFLAGS = 
SSTDISKSIM_LIB = 
SSTMACRO_CONFIG_TOOL = 
SSTMACRO_CPPFLAGS = 
SSTMACRO_LDFLAGS = 
SSTMACRO_PATH = 
SST_ACTIVE_ELEMLIBS =  SS_router VaultSimC cassini cpu_data event_test firefly hermes include introspector_cpu introspector_cpuTemperature iris memHierarchy merlin messageGeneratorComponent patterns portals4 portals4_sm prospero scheduler simpleClockerComponent simpleComponent simpleRNGComponent sst_mcniagara sst_mcopteron zodiac
SST_CXX0X_FLAGS = -std=c++0x
SST_DIST_ELEMLIBS =  PhoenixSim SS_router VaultSimC ariel cassini cpu_data cpu_power event_test firefly hermes include introspector_cpu introspector_cpuTemperature iris m5C macro_component memHierarchy merlin messageGeneratorComponent palacios patterns portals4 portals4_sm prospero scheduler simpleClockerComponent simpleComponent simpleRNGComponent sst_mcniagara sst_mcopteron sstdisksim zesto zodiac
SST_ELEMLIB_DIR = /home/afrodri/lib/sst
SST_LTLIBS_ELEMLIBS =  -dlopen $(top_builddir)/sst/elements/SS_router/libSS_router.la -dlopen $(top_builddir)/sst/elements/VaultSimC/libVaultSimC.la -dlopen $(top_builddir)/sst/elements/cassini/libcassini.la -dlopen $(top_builddir)/sst/elements/cpu_data/libcpu_data.la -dlopen $(top_builddir)/sst/elements/event_test/libevent_test.la -dlopen $(top_builddir)/sst/elements/firefly/libfirefly.la -dlopen $(top_builddir)/sst/elements/hermes/libhermes.la -dlopen $(top_builddir)/sst/elements/introspector_cpu/libintrospector_cpu.la -dlopen $(top_builddir)/sst/elements/introspector_cpuTemperature/libintrospector_cpuTemperature.la -dlopen $(top_builddir)/sst/elements/iris/libiris.la -dlopen $(top_builddir)/sst/elements/memHierarchy/libmemHierarchy.la -dlopen $(top_builddir)/sst/elements/merlin/libmerlin.la -dlopen $(top_builddir)/sst/elements/messageGeneratorComponent/libmessageGeneratorComponent.la -dlopen $(top_builddir)/sst/elements/patterns/libpatterns.la -dlopen $(top_builddir)/sst/elements/portals4/libportals4.la -dlopen $(top_builddir)/sst/elements/portals4_sm/libportals4_sm.la -dlopen $(top_builddir)/sst/elements/prospero/libprospero.la -dlopen $(top_builddir)/sst/elements/scheduler/libscheduler.la -dlopen $(top_builddir)/sst/elements/simpleClockerComponent/libsimpleClockerComponent.la -dlopen $(top_builddir)/sst/elements/simpleComponent/libsimpleComponent.la -dlopen $(top_builddir)/sst/elements/simpleRNGComponent/libsimpleRNGComponent.la -dlopen $(top_builddir)/sst/elements/sst_mcniagara/libsst_mcniagara.la -dlopen $(top_builddir)/sst/elements/sst_mcopteron/libsst_mcopteron.la -dlopen $(top_builddir)/sst/elements/zodiac/libzodiac.la
SST_RT_LIB = -lrt
STRIP = strip
VERSION = 3.0
ZOLTAN_CPPFLAGS = 
ZOLTAN_LDFLAGS = 
ZOLTAN_LIB = 
abs_builddir = /home/afrodri/buildSST/trunk/sst/elements/VaultSimC
abs_srcdir = /home/afrodri/buildSST/trunk/sst/elements/VaultSimC
abs_top_builddir = /home/afrodri/buildSST/trunk
abs_top_srcdir = /home/afrodri/buildSST/trunk
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
find = /bin/find
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/afrodri/buildSST/trunk/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/afrodri
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
EXTRA_DIST = 
compdir = $(pkglibdir)
comp_LTLIBRARIES = libVaultSimC.la
libVaultSimC_la_SOURCES = \
	libVaultSimGen.cpp \
	logicLayer.h \
	logicLayer.cpp \
	cpu.h \
	cpu.cpp \
	app.cpp \
	VaultSimC.cpp \
	VaultSimC.h \
	vaultGlobals.h \
	libphx/BankState.cpp \
	libphx/BankState.h \
	libphx/BusPacket.cpp \
	libphx/BusPacket.h \
	libphx/Callback.h \
	libphx/Globals.h \
	libphx/Partition.cpp \
	libphx/Partition.h \
	libphx/Transaction.cpp \
	libphx/Transaction.h \
	libphx/Vault.cpp \
	libphx/Vault.h \
	libphx/VaultController.cpp \
	libphx/VaultController.h

libVaultSimC_la_CPPFLAGS = $(BOOST_CPPFLAGS) $(MPI_CPPFLAGS) \
            -I$(top_srcdir)/sst/elements/include -Ilibphx

libVaultSimC_la_LDFLAGS = -module -avoid-version 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign sst/elements/VaultSimC/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign sst/elements/VaultSimC/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-compLTLIBRARIES: $(comp_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(compdir)" || $(MKDIR_P) "$(DESTDIR)$(compdir)"
	@list='$(comp_LTLIBRARIES)'; test -n "$(compdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(compdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(compdir)"; \
	}

uninstall-compLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(comp_LTLIBRARIES)'; test -n "$(compdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(compdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(compdir)/$$f"; \
	done

clean-compLTLIBRARIES:
	-test -z "$(comp_LTLIBRARIES)" || rm -f $(comp_LTLIBRARIES)
	@list='$(comp_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libphx/$(am__dirstamp):
	@$(MKDIR_P) libphx
	@: > libphx/$(am__dirstamp)
libphx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libphx/$(DEPDIR)
	@: > libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-BankState.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-BusPacket.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-Partition.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-Transaction.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-Vault.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libphx/libVaultSimC_la-VaultController.lo: libphx/$(am__dirstamp) \
	libphx/$(DEPDIR)/$(am__dirstamp)
libVaultSimC.la: $(libVaultSimC_la_OBJECTS) $(libVaultSimC_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libVaultSimC_la_LINK) -rpath $(compdir) $(libVaultSimC_la_OBJECTS) $(libVaultSimC_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-BankState.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-BankState.lo
	-rm -f libphx/libVaultSimC_la-BusPacket.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-BusPacket.lo
	-rm -f libphx/libVaultSimC_la-Partition.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-Partition.lo
	-rm -f libphx/libVaultSimC_la-Transaction.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-Transaction.lo
	-rm -f libphx/libVaultSimC_la-Vault.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-Vault.lo
	-rm -f libphx/libVaultSimC_la-VaultController.$(OBJEXT)
	-rm -f libphx/libVaultSimC_la-VaultController.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libVaultSimC_la-VaultSimC.Plo
include ./$(DEPDIR)/libVaultSimC_la-app.Plo
include ./$(DEPDIR)/libVaultSimC_la-cpu.Plo
include ./$(DEPDIR)/libVaultSimC_la-libVaultSimGen.Plo
include ./$(DEPDIR)/libVaultSimC_la-logicLayer.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-BankState.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-BusPacket.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-Partition.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-Transaction.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-Vault.Plo
include libphx/$(DEPDIR)/libVaultSimC_la-VaultController.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libVaultSimC_la-libVaultSimGen.lo: libVaultSimGen.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libVaultSimC_la-libVaultSimGen.lo -MD -MP -MF $(DEPDIR)/libVaultSimC_la-libVaultSimGen.Tpo -c -o libVaultSimC_la-libVaultSimGen.lo `test -f 'libVaultSimGen.cpp' || echo '$(srcdir)/'`libVaultSimGen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libVaultSimC_la-libVaultSimGen.Tpo $(DEPDIR)/libVaultSimC_la-libVaultSimGen.Plo
#	$(AM_V_CXX) \
#	source='libVaultSimGen.cpp' object='libVaultSimC_la-libVaultSimGen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libVaultSimC_la-libVaultSimGen.lo `test -f 'libVaultSimGen.cpp' || echo '$(srcdir)/'`libVaultSimGen.cpp

libVaultSimC_la-logicLayer.lo: logicLayer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libVaultSimC_la-logicLayer.lo -MD -MP -MF $(DEPDIR)/libVaultSimC_la-logicLayer.Tpo -c -o libVaultSimC_la-logicLayer.lo `test -f 'logicLayer.cpp' || echo '$(srcdir)/'`logicLayer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libVaultSimC_la-logicLayer.Tpo $(DEPDIR)/libVaultSimC_la-logicLayer.Plo
#	$(AM_V_CXX) \
#	source='logicLayer.cpp' object='libVaultSimC_la-logicLayer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libVaultSimC_la-logicLayer.lo `test -f 'logicLayer.cpp' || echo '$(srcdir)/'`logicLayer.cpp

libVaultSimC_la-cpu.lo: cpu.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libVaultSimC_la-cpu.lo -MD -MP -MF $(DEPDIR)/libVaultSimC_la-cpu.Tpo -c -o libVaultSimC_la-cpu.lo `test -f 'cpu.cpp' || echo '$(srcdir)/'`cpu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libVaultSimC_la-cpu.Tpo $(DEPDIR)/libVaultSimC_la-cpu.Plo
#	$(AM_V_CXX) \
#	source='cpu.cpp' object='libVaultSimC_la-cpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libVaultSimC_la-cpu.lo `test -f 'cpu.cpp' || echo '$(srcdir)/'`cpu.cpp

libVaultSimC_la-app.lo: app.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libVaultSimC_la-app.lo -MD -MP -MF $(DEPDIR)/libVaultSimC_la-app.Tpo -c -o libVaultSimC_la-app.lo `test -f 'app.cpp' || echo '$(srcdir)/'`app.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libVaultSimC_la-app.Tpo $(DEPDIR)/libVaultSimC_la-app.Plo
#	$(AM_V_CXX) \
#	source='app.cpp' object='libVaultSimC_la-app.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libVaultSimC_la-app.lo `test -f 'app.cpp' || echo '$(srcdir)/'`app.cpp

libVaultSimC_la-VaultSimC.lo: VaultSimC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libVaultSimC_la-VaultSimC.lo -MD -MP -MF $(DEPDIR)/libVaultSimC_la-VaultSimC.Tpo -c -o libVaultSimC_la-VaultSimC.lo `test -f 'VaultSimC.cpp' || echo '$(srcdir)/'`VaultSimC.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libVaultSimC_la-VaultSimC.Tpo $(DEPDIR)/libVaultSimC_la-VaultSimC.Plo
#	$(AM_V_CXX) \
#	source='VaultSimC.cpp' object='libVaultSimC_la-VaultSimC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libVaultSimC_la-VaultSimC.lo `test -f 'VaultSimC.cpp' || echo '$(srcdir)/'`VaultSimC.cpp

libphx/libVaultSimC_la-BankState.lo: libphx/BankState.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-BankState.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-BankState.Tpo -c -o libphx/libVaultSimC_la-BankState.lo `test -f 'libphx/BankState.cpp' || echo '$(srcdir)/'`libphx/BankState.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-BankState.Tpo libphx/$(DEPDIR)/libVaultSimC_la-BankState.Plo
#	$(AM_V_CXX) \
#	source='libphx/BankState.cpp' object='libphx/libVaultSimC_la-BankState.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-BankState.lo `test -f 'libphx/BankState.cpp' || echo '$(srcdir)/'`libphx/BankState.cpp

libphx/libVaultSimC_la-BusPacket.lo: libphx/BusPacket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-BusPacket.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-BusPacket.Tpo -c -o libphx/libVaultSimC_la-BusPacket.lo `test -f 'libphx/BusPacket.cpp' || echo '$(srcdir)/'`libphx/BusPacket.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-BusPacket.Tpo libphx/$(DEPDIR)/libVaultSimC_la-BusPacket.Plo
#	$(AM_V_CXX) \
#	source='libphx/BusPacket.cpp' object='libphx/libVaultSimC_la-BusPacket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-BusPacket.lo `test -f 'libphx/BusPacket.cpp' || echo '$(srcdir)/'`libphx/BusPacket.cpp

libphx/libVaultSimC_la-Partition.lo: libphx/Partition.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-Partition.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-Partition.Tpo -c -o libphx/libVaultSimC_la-Partition.lo `test -f 'libphx/Partition.cpp' || echo '$(srcdir)/'`libphx/Partition.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-Partition.Tpo libphx/$(DEPDIR)/libVaultSimC_la-Partition.Plo
#	$(AM_V_CXX) \
#	source='libphx/Partition.cpp' object='libphx/libVaultSimC_la-Partition.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-Partition.lo `test -f 'libphx/Partition.cpp' || echo '$(srcdir)/'`libphx/Partition.cpp

libphx/libVaultSimC_la-Transaction.lo: libphx/Transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-Transaction.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-Transaction.Tpo -c -o libphx/libVaultSimC_la-Transaction.lo `test -f 'libphx/Transaction.cpp' || echo '$(srcdir)/'`libphx/Transaction.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-Transaction.Tpo libphx/$(DEPDIR)/libVaultSimC_la-Transaction.Plo
#	$(AM_V_CXX) \
#	source='libphx/Transaction.cpp' object='libphx/libVaultSimC_la-Transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-Transaction.lo `test -f 'libphx/Transaction.cpp' || echo '$(srcdir)/'`libphx/Transaction.cpp

libphx/libVaultSimC_la-Vault.lo: libphx/Vault.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-Vault.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-Vault.Tpo -c -o libphx/libVaultSimC_la-Vault.lo `test -f 'libphx/Vault.cpp' || echo '$(srcdir)/'`libphx/Vault.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-Vault.Tpo libphx/$(DEPDIR)/libVaultSimC_la-Vault.Plo
#	$(AM_V_CXX) \
#	source='libphx/Vault.cpp' object='libphx/libVaultSimC_la-Vault.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-Vault.lo `test -f 'libphx/Vault.cpp' || echo '$(srcdir)/'`libphx/Vault.cpp

libphx/libVaultSimC_la-VaultController.lo: libphx/VaultController.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libphx/libVaultSimC_la-VaultController.lo -MD -MP -MF libphx/$(DEPDIR)/libVaultSimC_la-VaultController.Tpo -c -o libphx/libVaultSimC_la-VaultController.lo `test -f 'libphx/VaultController.cpp' || echo '$(srcdir)/'`libphx/VaultController.cpp
	$(AM_V_at)$(am__mv) libphx/$(DEPDIR)/libVaultSimC_la-VaultController.Tpo libphx/$(DEPDIR)/libVaultSimC_la-VaultController.Plo
#	$(AM_V_CXX) \
#	source='libphx/VaultController.cpp' object='libphx/libVaultSimC_la-VaultController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libVaultSimC_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libphx/libVaultSimC_la-VaultController.lo `test -f 'libphx/VaultController.cpp' || echo '$(srcdir)/'`libphx/VaultController.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf libphx/.libs libphx/_libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(compdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f libphx/$(DEPDIR)/$(am__dirstamp)
	-rm -f libphx/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-compLTLIBRARIES clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) libphx/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-compLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) libphx/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-compLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-compLTLIBRARIES clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-compLTLIBRARIES install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-compLTLIBRARIES

#libVaultSimC_la_LIBADD = $(PHXSIM_LIB)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
