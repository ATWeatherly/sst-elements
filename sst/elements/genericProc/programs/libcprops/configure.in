AC_PREREQ(2.59)
AC_INIT([libcprops], [0.1.8], [iaelion@users.sourceforge.net])
AC_CONFIG_SRCDIR([hashlist.c])

dnl Require at least AM 1.7. Prior versions require AM_CONFIG_HEADER
dnl and have no equivalent to AC_CONFIG_HEADERS (the plural version),
dnl which is a pain. AM 1.7 also added support for putting target
dnl information in AM_CONDITIONAL blocks and using the += modifier.
AM_INIT_AUTOMAKE([foreign check-news dist-bzip2 no-define 1.7])

# clean some extra things...
CLEANFILES="*~ .\#* .gdb_history"
AC_SUBST(CLEANFILES)

## Information on the package
AC_CANONICAL_HOST

AC_PROG_CC
AC_PROG_CC_C99
dnl We use system extensions. This includes setting _GNU_SOURCE and _REENTRANT
AC_USE_SYSTEM_EXTENSIONS
AC_PROG_CPP
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_LIBTOOL

# this should take care of Solaris
AC_SEARCH_LIBS([gethostbyname], [nsl])
AC_SEARCH_LIBS([socket], [socket])

AC_CACHE_SAVE

case "$host" in
	*-solaris*)
	AC_MSG_CHECKING([where ar is])
	for loc in /usr/xpg4/bin /usr/ccs/bin /usr/local/bin /usr/bin; do
		AS_IF([test -x "$loc/ar"],
			  [ardir="$loc"
			   break])
	done
	AS_IF([test "x$ardir" != "x"],[AR="$ardir/ar"])
	AC_MSG_RESULT($ardir)
	;;
	*-apple-darwin6*)
	# massive hack
	CFLAGS="$CFLAGS -no-cpp-precomp"
	;;
esac

AC_CHECK_LIB([dl], [dlsym])
AC_CHECK_LIB([pthread], [pthread_create])

# Check for header files
AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_DIRENT
AC_CHECK_HEADERS([fcntl.h stdarg.h unistd.h pthread.h regex.h sys/socket.h sys/select.h netinet/in.h netdb.h sys/poll.h dlfcn.h pcreposix.h])
AC_STRUCT_TM

AC_C_CONST
AC_C_INLINE

AC_TYPE_LONG_LONG_INT
AC_C_BIGENDIAN([],[AC_DEFINE([CP_BYTE_ORDER_LITTLE_ENDIAN],[1],[define if hardware byte order is little endian])])

AC_CACHE_SAVE

AC_MSG_CHECKING(whether variadic macros are supported)
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <stdio.h>
#define PRINT(fmt, ...) printf(fmt, ## __VA_ARGS__)
]], [[
    PRINT("%d %d %d", 1, 2, 3);
    return 0;
]])],[
AC_MSG_RESULT(yes)
AC_DEFINE([CP_HAS_VARIADIC_MACROS], [1], [variadic macros are supported])
],[
AC_MSG_RESULT(no)
])

CP_CHECK_ADDRINFO
CP_CHECK_PTHREADMUTEXRECURSIVE
AX_FUNC_WHICH_GETHOSTBYNAME_R

AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_FUNC_STRERROR_R
AC_CHECK_FUNCS([gethostbyname getopt dlopen getaddrinfo getcwd gethostname getpagesize gettimeofday gmtime_r inet_ntoa inet_ntop localtime_r memset poll pthread_getunique_np random read regcomp select sigaction snprintf socket srandom stat strcasecmp strdup strlcat strlcpy strncasecmp strndup strptime strstr vsnprintf vsprintf write])

AC_ARG_ENABLE([hashtable-multiples],
			  [AC_HELP_STRING([--enable-hashtable-multiples],
							  [hashtables allow multiple values (disabled)])],
			  [],
			  [enable_hashtable_multiples=no])
AS_IF([test "$enable_hashtable_multiples" = "yes"],
	  [AC_MSG_NOTICE([enabling multiple values in hash tables])
	   AC_DEFINE([CP_HASHTABLE_MULTIPLE_VALUES], [1], [allow multiple values])],
	  [AC_MSG_NOTICE([disabling multiple values in hash tables])])

AC_ARG_ENABLE([hashlist-multiples],
			  [AC_HELP_STRING([--enable-hashlist-multiples],
							  [hashlists allow multiple values (disabled)])],
			  [],
			  [enable_hashlist_multiples=no])
AS_IF([test "$enable_hashlist_multiples" = "yes"],
	  [AC_MSG_NOTICE([enabling multiple values in hash lists])
	   AC_DEFINE([CP_HASHLIST_MULTIPLE_VALUES], [1], [allow multiple values])],
	  [AC_MSG_NOTICE([disabling multiple values in hash lists])])

AC_ARG_ENABLE([server-cookies],
			  [AC_HELP_STRING([--disable-server-cookies],
							  [server support for http cookies (enabled)])],
			  [],
			  [enable_server_cookies=yes])
AS_IF([test "$enable_server_cookies" = "yes"],
	  [AC_MSG_NOTICE([enabling server support for http cookies])
	   AC_DEFINE([CP_USE_COOKIES],[1],[define if supporting http cookies])],
	  [AC_MSG_NOTICE([disabling server support for http cookies])])

AC_ARG_ENABLE([http-sessions],
			  [AC_HELP_STRING([--disable-http-sessions],
							  [support for http sessions (enabled)])],
	          [],
			  [enable_http_sessions=yes])
AS_IF([test "$enable_http_sessions" = "yes"],
	  [AC_MSG_NOTICE([enabling http session support])
	   AC_DEFINE([CP_USE_HTTP_SESSIONS],[1],[define to support http sessions])],
	  [AC_MSG_NOTICE([disabling http session support])])

AC_CACHE_SAVE

CP_CHECK_SSL
AM_CONDITIONAL([COMPILE_WITH_SSL], [test "$HAVE_SSL" = "yes"])

AC_ARG_ENABLE([cp-dbms],
			  [AC_HELP_STRING([--enable-cp-dbms],
							  [build dbms abstraction layer])],
			  [],
			  [enable_cp_dbms=$ac_cv_header_dlfcn_h])
AX_LIB_POSTGRESQL
AS_IF([test "$found_postgresql" = "yes"],[enable_cp_dbms=yes])

AX_LIB_MYSQL
AS_IF([test "$found_mysql" = "yes"],[enable_cp_dbms=yes])

AC_ARG_ENABLE([static-dbms],
			  [AC_HELP_STRING([--enable-static-dbms],
							  [link dbms drivers statically (disabled)])],
			  [],
			  [AS_IF([test "$ac_cv_header_dlfcn_h" = "yes"],
					 [enable_static_dbms=no],
					 [enable_static_dbms=yes])])

AM_CONDITIONAL([COMPILE_CP_DBMS], [test "$enable_cp_dbms" = "yes"])
AM_CONDITIONAL([COMPILE_CP_DBMS_POSTGRES_STATIC],
			   [test "$enable_static_dbms" = "yes" -a "$found_postgresql" = "yes"])
AM_CONDITIONAL([COMPILE_CP_DBMS_MYSQL_STATIC],
			   [test "$enable_static_dbms" = "yes" -a "$found_mysql" = "yes"])

AC_ARG_ENABLE([cpsvc],
			  [AC_HELP_STRING([--enable-cpsvc],
							  [build cpsvc (yes)])],
			  [],
			  [enable_cpsvc=yes])
AM_CONDITIONAL([ENABLE_CPSVC], [test "$enable_cpsvc" = "yes"])
AS_IF([test "$enable_cpsvc" = "yes"],
	  [AC_MSG_NOTICE(enabling cpsvc)],
	  [AC_MSG_NOTICE(skipping cpsvc)])

AC_ARG_ENABLE([cpsp],
			  [AC_HELP_STRING([--enable-cpsp],
							  [build cpsp (yes)])],
			  [],
			  [enable_cpsp="$ac_cv_header_dlfcn_h"])
AS_IF([test "$ac_cv_header_dlfcn_h" != "yes"],
	  [enable_cpsp=no])
AS_IF([test "$enable_cpsp" = "yes"],
	  [AS_IF([test -z "$LEX"],
			 [AC_MSG_ERROR(lex required for cpsp - either install lex or disable cpsp)])
	   AS_IF([test -z "$YACC"],
			 [AC_MSG_ERROR(yacc required for cpsp - either install yacc or disable cpsp)])
	   AC_MSG_NOTICE(enabling cpsp service)
	   AC_DEFINE([CP_USE_CPSP], [1], [supporting cpsp])],
	  [AC_MSG_NOTICE(skipping cpsp)])
AM_CONDITIONAL([ENABLE_CPSP], [test "$enable_cpsp" = "yes"])

AC_SUBST(PACKAGE_VERSION)
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_FILES([
	Makefile
	http.h
	svc/Makefile
	svc/cpsp/Makefile
	svc/cpsp/cpsp-gen.sh
	svc/cpsp/Makefile.cpsp
	man3/Makefile
	example/Makefile])
AC_OUTPUT
