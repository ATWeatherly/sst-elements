<?xml version="1.0"?>
<sdl version="2.0" />
<config>
	run-mode=both
	partitioner=self
</config>

<sst>
	<component name="McOpteron" type="sst_mcopteron.SSTMcOpteron">
		<params>

			<debugLevel><!-- print lots of debugging information (# in 1-3) -->
				1
			</debugLevel>
			<cycles><!-- set number of cycles to simulate (default: 100K?) -->
				100000
			</cycles>
			<converge><!-- run until CPI converges -->
				0
			</converge>
			<defFile><!-- use 'name' as insn def file (default: opteron-insn.txt) -->
				mcopteron/agner-insn.txt
			</defFile>
			<debugCycles><!-- start debugging output at cycle # (rather than 0) -->
				0
			</debugCycles>
			<printStaticMix><!-- print out static input instruction mix at beginning -->
				0
			</printStaticMix>
			<printInstructionMix><!-- print out simulation instruction mix at end -->
				0
			</printInstructionMix>
			<mixFile><!-- use 'name' as insn mix input file -->
				mcopteron/usedist_new.all
			</mixFile>
			<appDirectory><!-- what directory to look for files in -->
				.
			</appDirectory>
			<seed><!-- set random number seed -->
				375
			</seed>
			<traceFile><!-- use 'name' as input instruction trace file -->
			</traceFile>
			<traceOut><!-- generate a token trace to stderr -->
				0
			</traceOut>
			<seperateSize><!-- keep instruction types separate on operand size -->
				0
			</seperateSize>
			<newMixFile><!-- use 'name' as an i-mix-only file (new format) -->
				mcopteron/instrMix.txt
			</newMixFile>
			<instructionSizeFile><!-- use 'name' as instruction size distribution file (instrSizeDistr.txt) -->
				mcopteron/instrSizeDistr.txt
			</instructionSizeFile>
			<!-- instructionsizefile and fetchsizefile are exclusive options; only one of them should be used -->
			<fetchSizeFile><!-- use 'name' as fetch size distribution file (fetchSizeDistr.txt) -->
			</fetchSizeFile>
			<transFile><!-- se 'name' as instr transition probability file for Markov-based token generator -->
				mcopteron/transition_prob.txt
			</transFile>
			<repeatTrace><!-- use the input trace over and over -->
				0
			</repeatTrace>
		</params>
	</component>
</sst>
