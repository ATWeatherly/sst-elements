main() enter
#----------------------------------------------------------------
#    Intel(R) MPI Benchmarks 2018, MPI-1 part
#----------------------------------------------------------------
# Date                  : Thu Jan  1 00:00:01 1970
# Machine               : riscv64
# System                : Linux
# Release               : 4.19.136
# Version               : #1 Wed Sep 2 23:59:59 MST 2020
# MPI Version           : 3.1
# MPI Thread Environment: 


# Calling sequence was: 

# IMB-MPI1 -iter 1 -msglen msglen.txt

# Message lengths were user defined
#
# MPI_Datatype                   :   MPI_BYTE 
# MPI_Datatype for reductions    :   MPI_FLOAT
# MPI_Op                         :   MPI_SUM  
#
#

# List of Benchmarks to run:

# PingPong
# PingPing
# Sendrecv
# Exchange
# Allreduce
# Reduce
# Reduce_scatter
# Allgather
# Allgatherv
# Gather
# Gatherv
# Scatter
# Scatterv
# Alltoall
# Alltoallv
# Bcast
# Barrier

#---------------------------------------------------
# Benchmarking PingPong 
# #processes = 2 
#---------------------------------------------------
       #bytes #repetitions      t[usec]   Mbytes/sec
            1            1         6.85         0.15

#---------------------------------------------------
# Benchmarking PingPing 
# #processes = 2 
#---------------------------------------------------
       #bytes #repetitions      t[usec]   Mbytes/sec
            1            1         9.72         0.10

#-----------------------------------------------------------------------------
# Benchmarking Sendrecv 
# #processes = 2 
#-----------------------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]   Mbytes/sec
            1            1         8.57         8.75         8.66         0.23

#-----------------------------------------------------------------------------
# Benchmarking Exchange 
# #processes = 2 
#-----------------------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]   Mbytes/sec
            1            1        18.22        18.29        18.25         0.22

#----------------------------------------------------------------
# Benchmarking Allreduce 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            4            1        10.96        11.03        11.00

#----------------------------------------------------------------
# Benchmarking Reduce 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            4            1         7.91        10.74         9.32

#----------------------------------------------------------------
# Benchmarking Reduce_scatter 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            4            1        13.15        16.60        14.88

#----------------------------------------------------------------
# Benchmarking Allgather 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         9.78         9.94         9.86

#----------------------------------------------------------------
# Benchmarking Allgatherv 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1        11.88        11.96        11.92

#----------------------------------------------------------------
# Benchmarking Gather 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         7.62        10.02         8.82

#----------------------------------------------------------------
# Benchmarking Gatherv 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         5.33         9.66         7.50

#----------------------------------------------------------------
# Benchmarking Scatter 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         6.06         7.64         6.85

#----------------------------------------------------------------
# Benchmarking Scatterv 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         8.25         8.53         8.39

#----------------------------------------------------------------
# Benchmarking Alltoall 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1        18.61        18.68        18.64

#----------------------------------------------------------------
# Benchmarking Alltoallv 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1        18.94        18.98        18.96

#----------------------------------------------------------------
# Benchmarking Bcast 
# #processes = 2 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1            1         5.53         7.52         6.53

#---------------------------------------------------
# Benchmarking Barrier 
# #processes = 2 
#---------------------------------------------------
 #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            1         8.04         8.10         8.07


# All processes entering MPI_Finalize

